# RECB method
into method label RE1B parent_label EC0 remove_entry;
into method label RECB parent_label EC0 remove_entry;
into device label EC0 insert
begin
Method (RE1B, 1, NotSerialized)\n
{\n
    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n
    Field(ERAM, ByteAcc, NoLock, Preserve) { BYTE, 8 }\n
    Return(BYTE)\n
}\n
Method (RECB, 2, Serialized)\n
// Arg0 - offset in bytes from zero-based EC\n
// Arg1 - size of buffer in bits\n
{\n
    ShiftRight(Add(Arg1,7), 3, Arg1)\n
    Name(TEMP, Buffer(Arg1) { })\n
    Add(Arg0, Arg1, Arg1)\n
    Store(0, Local0)\n
    While (LLess(Arg0, Arg1))\n
    {\n
        Store(RE1B(Arg0), Index(TEMP, Local0))\n
        Increment(Arg0)\n
        Increment(Local0)\n
    }\n
    Return(TEMP)\n
}\n
end;

#WECB method
into method label WE1B parent_label EC0 remove_entry;
into method label WECB parent_label EC0 remove_entry;
into device label EC0 insert
begin
Method (WE1B, 2, NotSerialized)\n
{\n
    OperationRegion(ERAM, EmbeddedControl, Arg0, 1)\n
    Field(ERAM, ByteAcc, NoLock, Preserve) { BYTE, 8 }\n
    Store(Arg1, BYTE)\n
}\n
Method (WECB, 3, Serialized)\n
// Arg0 - offset in bytes from zero-based EC\n
// Arg1 - size of buffer in bits\n
// Arg2 - value to write\n
{\n
    ShiftRight(Add(Arg1,7), 3, Arg1)\n
    Name(TEMP, Buffer(Arg1) { })\n
    Store(Arg2, TEMP)\n
    Add(Arg0, Arg1, Arg1)\n
    Store(0, Local0)\n
    While (LLess(Arg0, Arg1))\n
    {\n
        WE1B(Arg0, DerefOf(Index(TEMP, Local0)))\n
        Increment(Arg0)\n
        Increment(Local0)\n
    }\n
}\n
end;

#16bit RECB
into method label _BIF code_regex \(XIF0, replaceall_matched begin (RECB(0x00,16), end;
into method label _BIF code_regex \(XIF1, replaceall_matched begin (RECB(0x02,16), end;
into method label _BIF code_regex \(XIF2, replaceall_matched begin (RECB(0x04,16), End;
into method label _BIF code_regex \(XIF3, replaceall_matched begin (RECB(0x06,16), end;
into method label _BIF code_regex \(XIF4, replaceall_matched begin (RECB(0x0E,16), end;
into method label _BIF code_regex \(XIF7, replaceall_matched begin (RECB(0x10,16), end;
into method label _BST code_regex \(XST0, replaceall_matched begin (RECB(0x32,16), end;
into method label _BST code_regex \(XST1, replaceall_matched begin (RECB(0x34,16), end;
into method label _BST code_regex \(XST2, replaceall_matched begin (RECB(0x36,16), end;
into method label _BST code_regex \(XST3, replaceall_matched begin (RECB(0x38,16), end;

#16bit WECB
into method label _BTP code_regex Store\s+\(Arg0,\sXTP0\) replaceall_matched begin WECB(0x3c,16,Arg0) end;

